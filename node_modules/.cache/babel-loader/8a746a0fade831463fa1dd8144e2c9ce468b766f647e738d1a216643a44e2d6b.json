{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { showNotification } from './ui-slice';\n\n// Define the initial state\nconst initialState = {\n  items: [],\n  totalQuantity: 0,\n  changed: false\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      state.changed = true;\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice += newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      state.changed = true;\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice -= existingItem.price;\n      }\n    }\n  }\n});\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://your-api-endpoint.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Something went wrong while sending cart data!');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Cart data sent successfully!'\n      }));\n    } catch (error) {\n      dispatch(showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: error.message || 'Failed to send cart data!'\n      }));\n    }\n  };\n};\nexport const {\n  replaceCart,\n  addItemToCart,\n  removeItemFromCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","showNotification","initialState","items","totalQuantity","changed","cartSlice","name","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cart","dispatch","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","actions","reducer"],"sources":["C:/SharpenerProjects/Redux-demo/redux-cart/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { showNotification } from './ui-slice';\r\n\r\n// Define the initial state\r\nconst initialState = {\r\n  items: [],\r\n  totalQuantity: 0,\r\n  changed: false,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n    addItemToCart(state, action) {\r\n      state.changed = true;\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find(item => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice += newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart(state, action) {\r\n      state.changed = true;\r\n      const id = action.payload;\r\n      const existingItem = state.items.find(item => item.id === id);\r\n      state.totalQuantity--;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter(item => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice -= existingItem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const sendCartData = cart => {\r\n  return async dispatch => {\r\n    dispatch(\r\n      showNotification({\r\n        status: 'pending',\r\n        title: 'Sending...',\r\n        message: 'Sending cart data!',\r\n      })\r\n    );\r\n\r\n    const sendRequest = async () => {\r\n      const response = await fetch('https://your-api-endpoint.com/cart.json', {\r\n        method: 'PUT',\r\n        body: JSON.stringify(cart),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Something went wrong while sending cart data!');\r\n      }\r\n    };\r\n\r\n    try {\r\n      await sendRequest();\r\n      dispatch(\r\n        showNotification({\r\n          status: 'success',\r\n          title: 'Success!',\r\n          message: 'Cart data sent successfully!',\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        showNotification({\r\n          status: 'error',\r\n          title: 'Error!',\r\n          message: error.message || 'Failed to send cart data!',\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const { replaceCart, addItemToCart, removeItemFromCart } = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}